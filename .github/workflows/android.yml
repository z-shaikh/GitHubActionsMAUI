name: CICD Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
    DOTNETVERSION: 8.0.x

jobs:  
  buildAndroid:
    runs-on: macos-14
    
    steps:

      # https://docs.github.com/en/actions/deployment/deploying-xcode-applications/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      # github docs for installing cert and provisioning profile
      - uses: actions/checkout@v2
      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{env.DOTNETVERSION}}'

      - name: Install .NET MAUI
        shell: bash
        run: |
          dotnet nuget locals all --clear 
          dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          dotnet workload install android --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json

       # Store Android Signing Keystore and password in Secrets using base64 encoding
      # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
      # commandline util to encode to base64 on windows
      
      
      - name: Restore nuget packages
        run: |
          dotnet restore GitHubActionsMAUI.sln      
      
      - name: Build Android App
        shell: bash
        run: |
            echo "${{ secrets.RELEASE_KEYSTORE }}" > encrypted.keystore
            base64 -d -i encrypted.keystore -o decrypted.keystore


            dotnet publish GitHubActionsMAUI/GitHubActionsMAUI.csproj -c:Release -f:net8.0-android  /p:AndroidPackageFormats=aab  /p:AndroidKeyStore=true  /p:AndroidSigningKeyStore="/Users/runner/work/GitHubActionsMAUI/GitHubActionsMAUI/decrypted.keystore" /p:AndroidSigningKeyAlias="${{ secrets.KEY_ALIAS }}" /p:AndroidSigningKeyPass="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" /p:AndroidSigningStorePass="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" --no-restore

      - name: List files in the build directory
        run: |
            ls -R GitHubActionsMAUI/bin/Release/

      - uses: actions/upload-artifact@v2
        with:
            name: artifacts-android
            path: |
              pwd
              ls -R GitHubActionsMAUI/bin/Release/
              GitHubActionsMAUI/bin/Release/net8.0-android/publish/com.unizite.app-Signed.aab
              GitHubActionsMAUI/bin/Release/net8.0-android/publish/com.unizite.app.aab

      - name: Upload Android Release to Play Store
        # You may pin to the exact commit or the version.
        # uses: r0adkll/upload-google-play@935ef9c68bb393a8e6116b1575626a7f5be3a7fb
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: "${{ secrets.SERVICEACCOUNTJSON }}"
          packageName: "com.unizite.app"
          # The Android release file to upload (.apk or .aab)
          releaseFile: "GitHubActionsMAUI/bin/Release/net8.0-android/publish/com.unizite.app-Signed.aab"
          # The Android release file(s) to upload (.apk or .aab). Separated by  a ',' for multiple artifacts. Supports glob
          track: "Closed testing - Beta"
          # In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0.              

