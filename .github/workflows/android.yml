name: CICD Test

on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
    DOTNETVERSION: 8.0.x

jobs:  
  buildiOS:
    runs-on: macos-14
    
    steps:
      - uses: actions/checkout@v2

      # https://docs.github.com/en/actions/deployment/deploying-xcode-applications/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      # github docs for installing cert and provisioning profile
        
      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version:  '${{env.DOTNETVERSION}}'

      - name: Install .NET MAUI
        shell: bash
        run: |
          dotnet nuget locals all --clear 
          dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          dotnet workload install android ios --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json

      - name: Restore nuget packages
        run: |
          dotnet restore GitHubActionsMAUI.sln
          
      - name: Build Android App
        shell: bash
        run: |
            dotnet publish GitHubActionsMAUI/GitHubActionsMAUI.csproj -f:net8.0-android -c:Release
      
      - name: List files in the build directory
        run: ls -R GitHubActionsMAUI/bin/Release/

      # Store Android Signing Keystore and password in Secrets using base64 encoding
      # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
      # commandline util to encode to base64 on windows
      - name: Extract Android signing key from env
        shell: bash
        run: |
            echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
            base64 -d android/release.jks.base64 > android/release.decrypted.jks

        # # check android SDK paths etc in installed VM : https://github.com/actions/virtual-environments#available-environments
      - name: Sign dev build
        shell: bash
        run: 
          jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab release

      - uses: actions/upload-artifact@v2
        with:
            name: artifacts-android
            path: |
              GitHubActionsMAUI/bin/Release/net8.0-android/publish/GitHubActionsMAUI.apk
